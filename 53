class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        vector<int> f(nums.size());
        f[0]=nums[0];
        for(int i=1;i<nums.size();i++)
            f[i]=max(f[i-1]+nums[i],nums[i]);
        
        return *std::max_element(f.begin(),f.end());
        
    }
};
知识点
1.dp的知识点
2.max，max_element用法

算法优化：
       class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        vector<int> f(nums.size());
     //   f[0]=nums[0];
      //  for(int i=1;i<nums.size();i++)
     ///       f[i]=max(f[i-1]+nums[i],nums[i]);
        
     //   return *std::max_element(f.begin(),f.end());
      //
        int sum=nums[0],ans=nums[0];
        for(int i=1;i<nums.size();i++)
        {
            sum=max(nums[i]+sum,nums[i]);
            if(sum>ans)
                ans=sum;
        }
       return ans;
    }
};
       
